import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import Message
from aiogram.utils import executor

# –í–≤–µ–¥–∏ —Å–≤—ñ–π —Ç–æ–∫–µ–Ω –≤—ñ–¥ BotFather —Ç—É—Ç
import os
TOKEN = os.getenv("BOT_TOKEN")


# –£–≤—ñ–º–∫–Ω–µ–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è (–¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–æ–∫)
logging.basicConfig(level=logging.INFO)

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞
bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

# –§—É–Ω–∫—Ü—ñ—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É —á–∞–π–æ–≤–∏—Ö
def calculate_tips(amount):
    dishwasher = round(amount * 0.2, 2)
    waiter1 = round(amount * 0.4, 2)
    waiter2 = round(amount * 0.4, 2)
    return dishwasher, waiter1, waiter2

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message_handler(commands=['start'])
async def send_welcome(message: Message):
    await message.reply("–ü—Ä–∏–≤—ñ—Ç! –í–≤–µ–¥–∏ —Å—É–º—É —á–∞–π–æ–≤–∏—Ö, —ñ —è –ø–æ–¥—ñ–ª—é —ó—ó –º—ñ–∂ –ø–µ—Ä—Å–æ–Ω–∞–ª–æ–º.")

# –û–±—Ä–æ–±–∫–∞ –≤–≤–µ–¥–µ–Ω–∏—Ö —á–∏—Å–µ–ª
@dp.message_handler(lambda message: message.text.isdigit())
async def handle_tip_amount(message: Message):
    amount = float(message.text)
    dishwasher, waiter1, waiter2 = calculate_tips(amount)
    response = (
        f"–†–æ–∑–ø–æ–¥—ñ–ª —á–∞–π–æ–≤–∏—Ö:\n"
        f"üçΩ –ü–æ—Å—É–¥–æ–º–∏–π–∫–∞: {dishwasher}$\n"
        f"üë®‚Äçüç≥ –û—Ñ—ñ—Ü—ñ–∞–Ω—Ç 1: {waiter1}$\n"
        f"üë©‚Äçüç≥ –û—Ñ—ñ—Ü—ñ–∞–Ω—Ç 2: {waiter2}$"
    )
    await message.reply(response)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
